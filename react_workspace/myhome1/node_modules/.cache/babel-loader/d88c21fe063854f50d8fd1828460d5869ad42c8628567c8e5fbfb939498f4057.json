{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\react_workspace\\\\myhome1\\\\src\\\\component\\\\HeroWrite.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeroWrite(prop) {\n  _s();\n  const [hero_name, setHeroName] = useState(\"\");\n  const [hero_desc, setHeroDesc] = useState(\"\");\n  const heroNameChange = e => {\n    setHeroName(e.target.value);\n  };\n  const heroDescChange = e => {\n    setHeroDesc(e.target.value);\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    //form 태그를 통해 서버에 정보를 전송전에 호출된다.\n    //버튼의 기본 기능을 정지시킨다. submit버튼의 submit기능을\n    //막고 별도의 처리를 한다.\n    //spring은 데이터를 문자열로 와야 받는다.\n    //axios 는 json으로 데이터를 주고받는다.\n    axios.post(\"http://localhost:9090/hero/write\", {\n      hero_name: hero_name,\n      hero_desc: hero_desc\n    }).then(res => {\n      console.log(res.data.result);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC601\\uC6C5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \"\\uC774\\uB984: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), \"\\uC5C5\\uC801: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(HeroWrite, \"7HLMU4/+2b1bDej3fgeGIJ/5/Ic=\");\n_c = HeroWrite;\nexport default HeroWrite;\nvar _c;\n$RefreshReg$(_c, \"HeroWrite\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HeroWrite","prop","_s","hero_name","setHeroName","hero_desc","setHeroDesc","heroNameChange","e","target","value","heroDescChange","onSubmit","preventDefault","axios","post","then","res","console","log","data","result","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/React/react_workspace/myhome1/src/component/HeroWrite.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction HeroWrite(prop) {\r\n  const [hero_name, setHeroName] = useState(\"\");\r\n  const [hero_desc, setHeroDesc] = useState(\"\");\r\n  const heroNameChange = (e) => {\r\n    setHeroName(e.target.value);\r\n  };\r\n  const heroDescChange = (e) => {\r\n    setHeroDesc(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //form 태그를 통해 서버에 정보를 전송전에 호출된다.\r\n    //버튼의 기본 기능을 정지시킨다. submit버튼의 submit기능을\r\n    //막고 별도의 처리를 한다.\r\n    //spring은 데이터를 문자열로 와야 받는다.\r\n    //axios 는 json으로 데이터를 주고받는다.\r\n    axios\r\n      .post(\"http://localhost:9090/hero/write\", {\r\n        hero_name: hero_name,\r\n        hero_desc: hero_desc,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <h3>영웅</h3>\r\n        이름: <input type=\"text\"></input>\r\n        <br />\r\n        업적: <input type=\"text\"></input>\r\n        <br />\r\n        <button>추가</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeroWrite;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAACC,IAAI,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACQ,SAAS,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAMU,cAAc,GAAIC,CAAC,IAAK;IAC5BJ,WAAW,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EACD,MAAMC,cAAc,GAAIH,CAAC,IAAK;IAC5BF,WAAW,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAME,QAAQ,GAAIJ,CAAC,IAAK;IACtBA,CAAC,CAACK,cAAc,EAAE;IAClB;IACA;IACA;IACA;IACA;IACAC,KAAK,CACFC,IAAI,CAAC,kCAAkC,EAAE;MACxCZ,SAAS,EAAEA,SAAS;MACpBE,SAAS,EAAEA;IACb,CAAC,CAAC,CACDW,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAACC,MAAM,CAAC;IAC9B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EACD,oBACExB,OAAA;IAAAyB,QAAA,eACEzB,OAAA;MAAMa,QAAQ,EAAEA,QAAS;MAAAY,QAAA,gBACvBzB,OAAA;QAAAyB,QAAA,EAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,kBACP,eAAA7B,OAAA;QAAO8B,IAAI,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC/B7B,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,kBACF,eAAA7B,OAAA;QAAO8B,IAAI,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC/B7B,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACN7B,OAAA;QAAAyB,QAAA,EAAQ;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACd;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAAC1B,EAAA,CAzCQF,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA2ClB,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}