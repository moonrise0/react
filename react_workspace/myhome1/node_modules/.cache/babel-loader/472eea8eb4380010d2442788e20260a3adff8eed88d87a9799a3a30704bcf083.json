{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\react_workspace\\\\myhome1\\\\src\\\\component\\\\HeroList.js\",\n  _s = $RefreshSig$();\n//HeroList.js - 백엔드 서버로부터 데이터 가져온다.\n//axios 설치필요 npm install axios\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeroList(props) {\n  _s();\n  const [heroList, setHeroList] = useState([]);\n  //useState함수가 값을 초기화를 해주면 해당 값을 저장할 변수와 해당값을 변경하는 함수를 반환함. \n  //[]-> 배열을 저장할 변수반환, 배열값을 변환할 함수주소\n\n  //첫번째 매개변수 -mount될때, update될떄,  unmount될때 호출된다.\n  //[]변수: 변수들이 바뀔떄 호출된다.\n  useEffect(() => {\n    axios.get(\"http://localhost:9090/hero/list\").then(() => {}).catch((res, status, error) => {\n      console.log(status);\n    });\n    // //서버에서 데이터를 불러온다.\n    //    console.log(\"나호출된다.\");\n    //    setHeroList(heroList.concat([{id:1, name:\"이순신\", desc:\"임란승리\"},\n    //    {id:2, name:\"세종대왕\",desc:\"한글승리\"},\n    //    {id:3, name:\"을지문\",desc:\"살수승리\"},\n    //    {id:4, name:\"강감찬\",desc:\"뭐승리\"}\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: heroList.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.descr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(HeroList, \"xetfYwZWHwMsAJYiR6qrrugXRpI=\");\n_c = HeroList;\nexport default HeroList;\nvar _c;\n$RefreshReg$(_c, \"HeroList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","HeroList","props","_s","heroList","setHeroList","get","then","catch","res","status","error","console","log","children","map","item","index","id","fileName","_jsxFileName","lineNumber","columnNumber","name","descr","_c","$RefreshReg$"],"sources":["C:/React/react_workspace/myhome1/src/component/HeroList.js"],"sourcesContent":["//HeroList.js - 백엔드 서버로부터 데이터 가져온다.\r\n//axios 설치필요 npm install axios\r\n\r\nimport React,{useState,useEffect} from \"react\"\r\nimport axios from 'axios';\r\n\r\nfunction HeroList(props){\r\n  const[heroList, setHeroList]=useState([]);\r\n//useState함수가 값을 초기화를 해주면 해당 값을 저장할 변수와 해당값을 변경하는 함수를 반환함. \r\n//[]-> 배열을 저장할 변수반환, 배열값을 변환할 함수주소\r\n\r\n//첫번째 매개변수 -mount될때, update될떄,  unmount될때 호출된다.\r\n//[]변수: 변수들이 바뀔떄 호출된다.\r\n  useEffect(()=>{ axios.get(\"http://localhost:9090/hero/list\")\r\n  .then(()=>{})\r\n\r\n  \r\n  .catch((res, status, error)=>{console.log(status);\r\n})\r\n    // //서버에서 데이터를 불러온다.\r\n    //    console.log(\"나호출된다.\");\r\n    //    setHeroList(heroList.concat([{id:1, name:\"이순신\", desc:\"임란승리\"},\r\n    //    {id:2, name:\"세종대왕\",desc:\"한글승리\"},\r\n    //    {id:3, name:\"을지문\",desc:\"살수승리\"},\r\n    //    {id:4, name:\"강감찬\",desc:\"뭐승리\"}\r\n  \r\n  },[]);\r\n\r\n  return(\r\n    <div>\r\n       <table>\r\n        {\r\n        heroList.map((item,index)=>{\r\n          return(\r\n        <tr>\r\n         <td>{item.id}</td>\r\n         <td>{item.name}</td>\r\n         <td>{item.descr}</td>\r\n        </tr>\r\n          )\r\n        })\r\n        }\r\n        \r\n       </table>\r\n       </div>\r\n\r\n  )\r\n}\r\nexport default HeroList"],"mappings":";;AAAA;AACA;;AAEA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAACC,KAAK,EAAC;EAAAC,EAAA;EACtB,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EAC3C;EACA;;EAEA;EACA;EACEC,SAAS,CAAC,MAAI;IAAEC,KAAK,CAACQ,GAAG,CAAC,iCAAiC,CAAC,CAC3DC,IAAI,CAAC,MAAI,CAAC,CAAC,CAAC,CAGZC,KAAK,CAAC,CAACC,GAAG,EAAEC,MAAM,EAAEC,KAAK,KAAG;MAACC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnD,CAAC,CAAC;IACE;IACA;IACA;IACA;IACA;IACA;EAEF,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEV,OAAA;IAAAc,QAAA,eACGd,OAAA;MAAAc,QAAA,EAECV,QAAQ,CAACW,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,KAAG;QACzB,oBACFjB,OAAA;UAAAc,QAAA,gBACCd,OAAA;YAAAc,QAAA,EAAKE,IAAI,CAACE;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eAClBtB,OAAA;YAAAc,QAAA,EAAKE,IAAI,CAACO;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACpBtB,OAAA;YAAAc,QAAA,EAAKE,IAAI,CAACQ;UAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjB;MAEL,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAGK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAGb;AAACnB,EAAA,CAzCQF,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA0CjB,eAAeA,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}