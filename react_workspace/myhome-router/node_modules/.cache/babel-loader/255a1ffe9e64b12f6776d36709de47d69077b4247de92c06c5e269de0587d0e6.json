{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\react_workspace\\\\myhome-router\\\\src\\\\component\\\\Fortest2.js\",\n  _s = $RefreshSig$();\n/* Fortest1.js*/\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Fortest2(props) {\n  _s();\n  const [fruitList, setFruitList] = useState([\"사과\", \"배\", \"포도\", \"수박\", \"머루\"]);\n  const [fruit, setFruit] = useState(\"\");\n\n  //input 태그에서 값 입력하면  fruit 변수에 값을 저장한다.\n  const onChange = e => {\n    setFruit(e.target.value);\n  };\n  const goAppend = () => {\n    //배열에  push함수 사용못함, 원래 배열에 데이터 추가. \n    //배열 자체를 새로 만들어 바꿔치기를 해야한다.  \n    //push - 원래 배열 메모리에 추가\n    //concat - 새로운 배열을 만들어서 기존 배열 내용복사하고 하나에 추가   \n    setFruitList(fruitList.concat(fruit));\n    setFruit(\"\"); //input태그 공백채우기\n  };\n\n  const goSelect = index => {\n    alert(fruitList[index]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: onChange,\n      value: fruit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: goAppend,\n      children: \" \\uCD94\\uAC00\\uD558\\uAE30 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: fruitList.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#none\",\n            onClick: () => {\n              goSelect(index);\n            },\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Fortest2, \"NFW4cJliAxgtpqhStEioRhvqFUA=\");\n_c = Fortest2;\nexport default Fortest2;\nvar _c;\n$RefreshReg$(_c, \"Fortest2\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fortest2","props","_s","fruitList","setFruitList","fruit","setFruit","onChange","e","target","value","goAppend","concat","goSelect","index","alert","children","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","href","_c","$RefreshReg$"],"sources":["C:/React/react_workspace/myhome-router/src/component/Fortest2.js"],"sourcesContent":["/* Fortest1.js*/\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Fortest2(props) {\r\n  const [fruitList, setFruitList] = useState([\"사과\", \"배\", \"포도\", \"수박\", \"머루\"]);\r\n  const [fruit, setFruit] =useState(\"\");\r\n \r\n //input 태그에서 값 입력하면  fruit 변수에 값을 저장한다.\r\n  const onChange= (e)=>{\r\n    setFruit(e.target.value);\r\n  }\r\n\r\n   const goAppend=()=>{\r\n     //배열에  push함수 사용못함, 원래 배열에 데이터 추가. \r\n     //배열 자체를 새로 만들어 바꿔치기를 해야한다.  \r\n     //push - 원래 배열 메모리에 추가\r\n     //concat - 새로운 배열을 만들어서 기존 배열 내용복사하고 하나에 추가   \r\n    setFruitList(fruitList.concat(fruit));\r\n    setFruit(\"\");//input태그 공백채우기\r\n   }\r\n\r\n\r\n   const goSelect=(index)=>{\r\n     alert(fruitList[index]);\r\n   }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" onChange={onChange} value={fruit} />\r\n      <button type=\"button\" onClick={goAppend}> 추가하기 </button>\r\n      <br/>\r\n      <ul>\r\n        {fruitList.map((item, index) => {\r\n          return (\r\n            <li key={index}>\r\n              <a href=\"#none\" onClick={()=>{goSelect(index)}}>{item}</a>\r\n         \r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Fortest2;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EACzE,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAET,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACC,MAAMU,QAAQ,GAAGC,CAAC,IAAG;IACnBF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAEA,MAAMC,QAAQ,GAACA,CAAA,KAAI;IACjB;IACA;IACA;IACA;IACDP,YAAY,CAACD,SAAS,CAACS,MAAM,CAACP,KAAK,CAAC,CAAC;IACrCC,QAAQ,CAAC,EAAE,CAAC,CAAC;EACd,CAAC;;EAGD,MAAMO,QAAQ,GAAEC,KAAK,IAAG;IACtBC,KAAK,CAACZ,SAAS,CAACW,KAAK,CAAC,CAAC;EACzB,CAAC;EAIF,oBACEf,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACV,QAAQ,EAAEA,QAAS;MAACG,KAAK,EAAEL;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACvDtB,OAAA;MAAQkB,IAAI,EAAC,QAAQ;MAACK,OAAO,EAAEX,QAAS;MAAAK,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACxDtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACLtB,OAAA;MAAAiB,QAAA,EACGb,SAAS,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEV,KAAK,KAAK;QAC9B,oBACEf,OAAA;UAAAiB,QAAA,eACEjB,OAAA;YAAG0B,IAAI,EAAC,OAAO;YAACH,OAAO,EAAEA,CAAA,KAAI;cAACT,QAAQ,CAACC,KAAK,CAAC;YAAA,CAAE;YAAAE,QAAA,EAAEQ;UAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAK,GADnDP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAGT;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV;AAACnB,EAAA,CA1CQF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA4CjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}